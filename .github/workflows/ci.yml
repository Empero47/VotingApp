name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Backend Job (Spring Boot)
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and run tests
        run: ./mvnw clean test

      - name: Build Spring Boot Application
        run: ./mvnw clean package -DskipTests

      - name: Upload Test Results (JUnit)
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-results
          path: target/test-classes

  # Frontend Job (React)
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm install

      - name: Run frontend tests with Jest
        run: npm test -- --coverage

      - name: Build the React Application
        run: npm run build

      - name: Upload Test Results (Jest)
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-results
          path: coverage

  # Deploy a job (optional if you want to deploy after test pass)
  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Server
        run: |
          echo "Deploying to your production server..."
          # Your deploy script (e.g., deploy Spring Boot and React app)
